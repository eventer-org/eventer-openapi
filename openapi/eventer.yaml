# see: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md
openapi: 3.1.0

info:
  title: eventer web api
  description: |-
    This is the official documentation of the (public) eventer web api, with which you can search and receive informations about events in Germany.<br /><br /><b>Note: Because this project is in beta stage the offered events are restricted to the Chemnitz area in Saxony / Germany.</b><br /><br />This API is used by [eventer.app](https://eventer.app), a mobile app to find local events.
    ## Making a request
    All URLs starts with `https://api.eventer.app/v1/`. The path is prefixed with the API version. If we change the API in backward-incompatible ways, we'll bump the version marker and maintain stable support for the old URLs.
    Here's a simple example to search for upcoming "Party" events:
    [https://api.eventer.app/v1/events?search=Party](https://api.eventer.app/v1/events?search=Party)
    ## Date formats
    All timestamps (for requests and responses) are encoded in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) with the following format: `YYYY-MM-DD'T'HH:mm'Z'`. The timezone used in responses is `UTC`.
    ## Pagination and Limits
    Most collection APIs paginate their results. Normally you can specify a limit with the parameter `limit` which must be greater than 0 and lower than 101 (default: 10). If there are more results to paginate for, you will get a `cursor` in the response which can be used as parameter for the next request (e.g. `&cursor=foo`), and so on until you get a response without cursor.
    ## Authentication
    This is an open API, no authentication needed.
    ## Help us make it better
    Please tell us how we can make the API better. If you have a specific feature request or if you found a bug, please feel free to contact us.
  version: "1.0"

servers:
- url: https://api.eventer.app/v1/
  variables: {}

paths:
  /events:
    $ref: ./events/discover.yaml
  /events/{id}:
    $ref: ./events/by-id.yaml

  /places:
    $ref: ./places/discover.yaml
  /places/{id}:
    $ref: ./places/by-id.yaml

parameters:

  search:
    name: search
    in: query
    description: Searches events by a free text search.
    schema:
      type: string
      format: string
    required: false
    example: Party

  starts_at_min:
    name: starts_at_min
    in: query
    description: 'The minimum starts-at timestamp for events. If not given the default value will be `now`.'
    schema:
      type: string
      format: date-time
    required: false

  starts_at_max:
    name: starts_at_max
    in: query
    description: The maximum starts-at timestamp for events.
    schema:
      type: string
      format: date-time
    required: false

  categories:
    name: categories
    in: query
    description: |-
      A comma-separated list of event categories to search for (not all events are categorized yet). 
      If not specified all events of all categories (or no category) will be returned.
      <br/><br/>Currently the following categories are supported:
      <br/>`exhibition`, `meetup`, `movie`'
    schema:
      type: string
    required: false
    example: 'meetup,movie'

  google_place_ids:
    name: google_place_ids
    in: query
    description: |-
      A comma-separated list of ids of google places to restrict search to events from these places only.
      <br/>You can use the google maps api to search for google place ids:
      [google place id finder](https://developers.google.com/maps/documentation/javascript/examples/places-placeid-finder).
    schema:
      type: string
    required: false
    example: 'ChIJYzs3_URGp0cRspbeorh84LM,ChIJQXmv10JGp0cROM6S5hB1AG8'

  geo_area:
    name: geo_area
    in: query
    description: |-
      Restricts the event search to a geo area bounding box specified by 4 comma separated coordinates:
      top (latitude), left (longitude), bottom (latitude) and right (longitude), in this order.
    schema:
      type: string
    required: false
    example: '50.838948,12.912577,50.827132,12.933774'

  geo_raster_points:
    name: geo_raster_points
    in: query
    description: |-
      Restricts the event search to a geo areas specified by "raster points".
      A raster point is a latitude/longitude combination of double values rounded off to 1 decimal point
      (separated by a semicolon). For example the "raster point" `50.8;12.9` restricts events
      to locations within a latitude starting with `50.8` and longitude starting with `12.9`.
    schema:
      type: string
    required: false
    example: '50.8;12.9,50.9;12.9'

  contexts:
    name: contexts
    in: query
    description: |-
      Events may assigned to different contexts to determine where they come from.
      For example a meetup event has the following contexts: `meetup`, `meetup/groups/:groupId` and `meetup/events/:eventId`.
      <br /><br />So you can search for all events related to a context (e.g. all events of a meetup group).
    schema:
      type: string
    required: false
    example: 'meetup/groups/29602718'

  updated_since:
    name: updated_since
    in: query
    description: |-
      If set, only events will be returned which has been added or modified since the given timestamp. 
      Can be used for synchronization or fetch scenarios.
    schema:
      type: string
      format: date-time
    required: false

  include_deleted:
    name: include_deleted
    in: query
    description: |-
      If set to `true` the response will also include events which have been deleted
      (since the last update timestamp). This option can be used for synchronization to get information about deleted events.
    schema:
      type: boolean
    required: false

  include_places:
    name: include_places
    in: query
    description: |-
      If set to `true` the response will also include the field places which holds all places of the fetched events by their id. 
      So you can use one request to fetch events with the places where they take part.
    schema:
      type: boolean
    required: false

requests:

  events:
    type: object
    properties:
      - $ref: '#/parameters/search'
      - $ref: '#/parameters/starts_at_min'
      - $ref: '#/parameters/starts_at_max'
      - $ref: '#/parameters/categories'
      - categories:
        description: 'A list of event categories to search for (not
          all events are categorized yet). If not specified all events of all categories
          (or without category) will be returned.<br/><br/>Currently the following
          categories are supported: <br/>`exhibition`, `meetup`, `movie`'
        type: array
        items:
          type: string
        example: [ meetup, movie ]
      - google_place_ids:
        description: 'A list of ids of google places to restrict search to events from these places only.
          <br/>You can use the google maps api to search for google place ids:
          [google place id finder](https://developers.google.com/maps/documentation/javascript/examples/places-placeid-finder).'
        type: array
        items:
          type: string
          example: ChIJQ7SzNXtGp0cRZwiPGboZQJo
      - geo_area:
        description: 'Restricts the event search to a geo area bounding box specified by 4 comma separated coordinates:
          top (latitude), left (longitude), bottom (latitude) and right (longitude).'
        $ref: './schemas.yaml#/GeoArea'
      - geo_raster_points:
        description: 'Restricts the event search to a geo areas specified by "raster points".
          A raster point is a latitude/longitude combination of double values rounded off to 1 decimal point
          (separated by a semicolon). For example the "raster point" `50.8;12.9` restricts events
          to locations within a latitude starting with `50.8` and longitude starting with `12.9`.'
        type: array
        items:
          type: array
          format: double
        example: [ [ 50.8, 12.9 ], [ 50.9, 12.9 ] ]
      - contexts:
        description: 'Events may assigned to different contexts to determine where they come from.
          For example a meetup event has the following contexts: `meetup`, `meetup/groups/{groupId}` and `meetup/events/{eventId}`.
          <br /><br />So you can search for all events related to a context (e.g. all events of a meetup group).'
        type: array
        items:
          type: string
        example: [ "meetup/groups/29602718", "meetup/groups/29002800" ]
      - $ref: '#/parameters/updated_since'
      - include:
        description: 'Adds some additional content to the response (e.g. `places` to include all related places).'
        $ref: '#/requests/DiscoverRequestIncludeType'
      - $ref: '../common/components.yaml#/parameters/limit'
      - $ref: '../common/components.yaml#/parameters/cursor'

  DiscoverRequestIncludeType:
    type: object
    properties:
      deleted:
        description: 'If set to `true`the response will also include events which have been deleted
          (since the last update timestamp). This option can be used for synchronization to get information about deleted events.'
        type: boolean
      places:
        description: 'If set to `true` the response will also include the field places which holds
          all places of the fetched events by their id. So you can use one request to fetch events with the places where they take part.'
        type: boolean

responses:

  events:
    type: object
    properties:
      events:
        description: 'The found events, ordered by `event.starts_at` or `event.updated_at` timestamp.'
        type: array
        items:
          $ref: './schemas.yaml#/Event'
      places:
        description: 'If `include.places: true` is set, all related places of returned events will be included (by their google place id).'
        type: object
        additionalProperties:
          $ref: '../places/schemas.yaml#/Place'
      primary_google_place_ids:
        description: 'A google place may have multiple place ids, but only one primary. If `google_place_ids` are given by the request,
          which were not the primary ones, this dictionary holds the related primary google ids (only if they are different).
          All places will be returned and linked with their primary google place id.'
        type: object
        additionalProperties:
          type: string
      cursor:
        description: 'If given this cursor can be used to retrieve the next bunch of events.
          This cursor must be added as parameter to same request to get the next events.'
        type: string
        example: WzE1NTk2NjU4MDAsImV2ZW50IzUxODQ0OTU2MTk2NzAwMTYiXQ==
      request:
        $ref: '#/requests/events'
      timestamp:
        description: 'The timestamp, when this request has been executed.
          Can be used to get only event updates on using `updated_since` with this timestamp.'
        type: string
        format: date-time

get:
  tags:
  - /events
  operationId: discover-events-get
  summary: "/events"
  description: Use this endpoint to search for events.
    <br /><br />All returned events will be primarily sorted by `event.starts_at` timestamps.
    This is a shortcut for `POST /events` request.
  parameters:
  - name: search
    in: query
    description: Searches events by a free text search.
    schema:
      type: string
      format: string
    required: false
    example: Party
  - name: starts_at_min
    in: query
    description: 'The minimum starts-at timestamp for events. If not given the
      default value will be `now`.'
    schema:
      type: string
      format: date-time
    required: false
  - name: starts_at_max
    in: query
    description: The maximum starts-at timestamp for events.
    schema:
      type: string
      format: date-time
    required: false
  - name: categories
    in: query
    description: 'A comma separated list of event categories to search for (not
      all events are categorized yet). If not specified all events of all categories
      (or without category) will be returned.<br/><br/>Currently the following
      categories are supported: <br/>`exhibition`, `meetup`, `movie`'
    schema:
      type: string
      example: meetup
    required: false
    example: meetup,movie
  - name: google_place_ids
    in: query
    description: 'A comma separated list of ids of google places to restrict search to events from these places only.
      <br/>You can use the google maps api to search for google place ids:
      [google place id finder](https://developers.google.com/maps/documentation/javascript/examples/places-placeid-finder).'
    schema:
      type: array
      items:
        type: string
    style: simple
    required: false
  - name: geo_area
    in: query
    description: 'Restricts the event search to a geo area bounding box specified by 4 comma separated coordinates:
      top (latitude), left (longitude), bottom (latitude) and right (longitude), in this order.'
    schema:
      type: array
      items:
        type: number
        format: double
    required: false
    example: 50.838948,12.912577,50.827132,12.933774
  - name: geo_raster_points
    in: query
    description: 'Restricts the event search to a geo areas specified by "raster points".
      A raster point is a latitude/longitude combination of double values rounded off to 1 decimal point
      (separated by a semicolon). For example the "raster point" `50.8;12.9` restricts events
      to locations within a latitude starting with `50.8` and longitude starting with `12.9`.'
    schema:
      type: string
    required: false
    example: 50.8;12.9,50.9;12.9
  - name: contexts
    in: query
    description: 'Events may assigned to different contexts to determine where they come from.
      For example a facebook event has the following contexts: `facebook`, `facebook/pages/{pageId}` and `facebook/events/{eventId}`.
      <br /><br />So you can search for all events related to a context (e.g. all events of a facebook page).'
    schema:
      type: string
    required: false
    example: meetup/groups/29602718
  - name: updated_since
    in: query
    description: 'If set, only events will be returned which has been added or
      modified since the given timestamp. Can be used for synchronization or fetch scenarios.'
    schema:
      type: string
      format: date-time
    required: false
  - name: include_deleted
    in: query
    description: 'If set to `true`the response will also include events which have been deleted
        (since the last update timestamp). This option can be used for synchronization to get information about deleted events.'
    schema:
      type: boolean
    required: false
  - name: include_places
    in: query
    description: 'If set to `true` the response will also include the field places which holds
      all places of the fetched events by their id. So you can use one request to fetch events with the places where they take part.'
    schema:
      type: boolean
    required: false
  - name: limit
    in: query
    description: 'Sets the limit how much events should be returned by the response.
      Limit must be greater than 0 and lower than 101. If not set the default limit will be 10.'
    schema:
      type: integer
      format: int32
    required: false
    example: 10
  - name: cursor
    in: query
    description: 'Continues a search by an `offset` specified by this cursor.
      Any event search could return a cursor which represents an offset to paginate to the next events.
      To use a cursor you have to re-run the request with same parameters again but with the given cursor
      value to retrieve the next events of your search behind the limit.'
    schema:
      type: string
    required: false
  responses:
    '200':
      description: All events that match the specified search criterias.
      content:
        application/json:
          schema:
            $ref: './components.yaml#/components/schemas/DiscoverResponse'
post:
  tags:
  - /events
  summary: "/events"
  operationId: discover-events-post
  description: Use this endpoint to search for events.<br /><br />All returned
    events will be primarily sorted by `event.starts_at` timestamps.
  requestBody:
    description: Defines search parameters to find events.
    content:
      application/json:
        schema:
          $ref: './components.yaml#/components/schemas/DiscoverRequest'
  responses:
    '200':
      description: All events that match the specified search criterias.
      content:
        application/json:
          schema:
            $ref: './components.yaml#/components/schemas/DiscoverResponse'

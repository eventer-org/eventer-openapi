# see: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.4.md
openapi: 3.0.4

info:
  title: eventer web API
  description: |-
    This is the official documentation of the (public) eventer web API,
    with which you can search and receive information about events in Germany.
    <br /><br />
    <b>Note: Because this project is in beta stage the offered events are restricted to the Chemnitz area in Saxony / Germany.</b>
    <br /><br />

    ## Making a request
    All URLs starts with `https://api.eventer.app/v1/`. The path is prefixed with the API version.
    If we change the API in backward-incompatible ways, we'll bump the version marker and maintain stable support for the old URLs.
    Here's a simple example to search for upcoming "Party" events:
    [https://api.eventer.app/v1/events?search=Party](https://api.eventer.app/v1/events?search=Party)

    ## Date formats
    All timestamps (for requests and responses) are encoded in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
    with the following format: `YYYY-MM-DD'T'HH:mm'Z'`. The timezone used in responses is `UTC`.

    ## Pagination and Limits
    Most collection APIs paginate their results. Normally you can specify a limit with the parameter `limit`
    which must be greater than 0 and lower than 101 (default: 10). If there are more results to paginate for,
    you will get a `cursor` in the response which can be used as parameter for the next request (e.g. `&cursor=foo`),
    and so on until you get a response without cursor.

    ## Authentication
    This is an open API, no authentication needed.

    ## Help us make it better
    Please tell us how we can make the API better. If you have a specific feature request or if you found a bug,
    please feel free to contact us or contribute directly to our [git repository](https://github.com/eventer-org/eventer-openapi).
  version: '1.0'
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
- url: 'https://api.eventer.app/v1'
  variables: {}

paths:
  /events:
    $ref: './events/index.yaml'
  /events/{id}:
    $ref: './events/_id.yaml'
  /places:
    $ref: './places/index.yaml'
  /places/{id}:
    $ref: './places/_id.yaml'
